version: "3.8"

services:
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APPDATA_BASE}/watchtower/config.json:/config.json
    restart: unless-stopped

  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${SWAG_URL}
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=${SWAG_DNS_PLUGIN}
    volumes:
      - ${APPDATA_BASE}/swag:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SIGNUPS_ALLOWED=false
      - DOMAIN=${VW_DOMAIN}
      - ADMIN_TOKEN=${VW_ADMIN_TOKEN}
    volumes:
      - ${APPDATA_BASE}/vaultwarden:/data   
    ports:
      - 3141:80
      - 3012:3012
    restart: unless-stopped

  syncthing:
    image: lscr.io/linuxserver/syncthing
    container_name: syncthing
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA_BASE}/syncthing:/config
      - ${ST_SYNC_PATH}:/config/default
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  gitea-db:
    image: lscr.io/linuxserver/mariadb
    container_name: gitea-db
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${GITEA_MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${GITEA_MYSQL_USER}
      - MYSQL_PASSWORD=${GITEA_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${GITEA_MYSQL_DATABASE}
    volumes:
      - ${APPDATA_BASE}/gitea-db:/config
    ports:
      - 3306:3306
    restart: unless-stopped
  
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - USER_UID=${GITEA_UID}
      - USER_GID=${GITEA_GID}
      - GITEA__database__DB_TYPE=mysql
      - GITEA__database__HOST=gitea-db:3306
      - GITEA__database__NAME=${GITEA_MYSQL_DATABASE}
      - GITEA__database__USER=${GITEA_MYSQL_USER}
      - GITEA__database__PASSWD=${GITEA_MYSQL_PASSWORD}
    volumes:
      - ${APPDATA_BASE}/gitea:/data
      - ${BACKUP_BASE}/gitea:/tmp
      - ${GITEA_SSH_PATH}:/data/git/.ssh
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "127.0.0.1:2222:22"
    depends_on:
      - gitea-db
    restart: unless-stopped

  drone:
    image: drone/drone:latest
    container_name: drone
    environment:
      - DRONE_GITEA_SERVER=${DRONE_GITEA_SERVER}
      - DRONE_GIT_ALWAYS_AUTH=${DRONE_GIT_ALWAYS_AUTH}
      - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_USER_CREATE=${DRONE_USER_CREATE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APPDATA_BASE}/drone:/data
    restart: unless-stopped

  drone-runner:
    image: drone/drone-runner-docker:1
    container_name: drone-runner
    environment:
      - DRONE_RPC_PROTO=${DRONE_RPC_PROTO}
      - DRONE_RPC_HOST=${DRONE_RPC_HOST}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_RUNNER_NAME=${DRONE_RUNNER_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  notes-test:
    image: nginx
    container_name: notes-test
    volumes:
      - ${APPDATA_BASE}/notes-test/site:/usr/share/nginx/html:ro
    ports:
      - "3142:80"
    restart: unless-stopped